@using System.Web.Http.Routing
@{
    ViewBag.Title = "Home Page";
}

<div id="videoTableOutput">

</div>

<button id="createVideo">Create Video</button>

<div id="videoEditOutput">
</div>


<script id="videoTable" type="text/html">
    <table>
        <thead>
        <th>Title</th>
        <th>Length</th>
        <th></th>
        </thead>
        <tbody>
        {{#each video}}
        <tr data-id={{Id}}>
            <td>{{Title}}</td>
            <td>{{Length}}</td>
            <td>
                <button class="editVideo">Edit</button>                
                <button class="deleteVideo">Delete</button>
            </td>
        </tr>
        {{/each}}
        </tbody>
    </table>
</script>

<script id="videoEdit" type="text/html">
    <hr />
    <form>
        <input type="hidden" name="id" id="id" value="{{Id}}" />
        <label for="title">Title:</label>
        <input type="text" name="Title" id="title" required value="{{Title}}"/>
        <label for="length">Length</label>
        <input type="number" min="0" max="200" name="length" id="length" value="{{Length}}"/>
        <input type="submit" id="saveVideo"/>
    </form>
</script>


@section scripts {
    <script src="~/Scripts/handlebars.js"></script>

    <script>
        var videoServer = (function() {
            var videoApiUrl = '@Url.RouteUrl("DefaultApi", new {HttpRoute = "", Controller = "videos"})';

            //Error Handlying code
            $(document).ajaxError(function(event, xhr) {
                alert(xhr.status + ":" + xhr.statusText);
            });

            var getVideos = function() {
                return $.ajax(videoApiUrl);
            };

            var getVideo = function(id) {
                return $.ajax(videoApiUrl + "/" + id);
            };


            //Post
            // Ajax( url string, The define the ajax settings - 
            //in this instance post with data of type video)
            var putVideos = function(video) {
                return $.ajax(videoApiUrl + "/" + video.Id,
                    {
                        type: "PUT",
                        data: video
                    });
            };

            var addVideo = function(video) {
                return $.ajax(videoApiUrl,
                    {
                        type: "POST",
                        data: video

                    });
            }

            // Revealing module pattern - public object
            return {
                getVideos: getVideos,
                getVideo: getVideo,
                putVideos: putVideos,
                addVideo: addVideo
            };

        }());

        (function() {
            /*
             So the way to remember HandleBars.js is we ajax and WebApi to retrieve our data
            from the server. Once the server has returned the required data, we then use handlebars.js to
            quickly build some nice html using an almost placeholderr script, we then create this html in a buffer
            and output it onto the view. We then have some nice javascript listening for actions and reacting to this actions.
             */
            //Handlebar.js
            var templates = {};

            var compiledTemplates = function() {
                templates.videoTable = Handlebars.compile($("#videoTable").html());
                templates.videoEdit = Handlebars.compile($("#videoEdit").html());
            }

            // Main methods
            var showAllVideos = function(data) {
                var output = templates.videoTable({ video: data });
                $("#videoTableOutput").html(output);
            }

            var showVideoForEdit = function(video) {
                var output = templates.videoEdit(video);
                $("#videoEditOutput").html(output);
            }

            var editVideo = function() {
                var id = getId(this);
                videoServer.getVideo(id).done(showVideoForEdit);
            }

            //Create an empty objectc - pass to edit
            //Edit then posts to addVideo - which passes to webAPi post method
            var createVideo = function() {
                var video = { Id: 0, Title: "", Length: 0 };
                showVideoForEdit(video);
            }


            // Helper methods
            var refreshVideos = function() {
                videoServer.getVideos().done(showAllVideos);
            }

            var getId = function(element) {
                return $(element).parents("tr").attr("data-id");
            }

            var clearEdit = function() {
                $("videoEditOutput").hide();
            }

            var saveVideo = function() {
                var video = {
                    "Id": $("#id").val(),
                    "Title": $("#title").val(),
                    "Length": $("#length").val()
                }

                var operation;
                if (video.Id != "0") {
                    operation = videoServer.putVideos(video);
                } else {
                    operation = videoServer.addVideo(video);
                }
                operation.done(refreshVideos, clearEdit);
                return false;
            }

            var wireEvent = function() {
                $(document).on("click", ".editVideo", editVideo);
                $(document).on("click", "#saveVideo", saveVideo);
                $(document).on("click", "#createVideo", createVideo);
            }

            $(function() {
                wireEvent();
                compiledTemplates();
                refreshVideos();
            });

        }());
    </script>
}